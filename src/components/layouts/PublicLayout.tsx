import { SignInButton, useUser } from "@clerk/nextjs";
import Head from "next/head";
import Link from "next/link";
import { useRouter } from "next/router";
import { useEffect } from "react";
import ToggleTheme from "../shared/ToggleTheme";
import { useAppSelector } from "~/redux/hooks";

export default function PublicLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const colorTheme = useAppSelector((state) => state.client.colorTheme);
  const user = useUser();

  const router = useRouter();
  const { isLoaded: userLoaded } = useUser();

  useEffect(() => {
    if (!userLoaded) return;
    if (user.isSignedIn) void router.push("/user/dashboard");
  }, [userLoaded]);

  return (
    <div className={`${colorTheme}`}>
      <Head>
        <title>Realty-Hub</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <nav className="flex">
        <div className="logo-container flex flex-none">
          <Link href="/">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              fill="none"
              viewBox="0 0 24 24"
              stroke-width="1.5"
              stroke="currentColor"
              className="h-6 w-6"
            >
              <path
                stroke-linecap="round"
                stroke-linejoin="round"
                d="M2.25 12l8.954-8.955c.44-.439 1.152-.439 1.591 0L21.75 12M4.5 9.75v10.125c0 .621.504 1.125 1.125 1.125H9.75v-4.875c0-.621.504-1.125 1.125-1.125h2.25c.621 0 1.125.504 1.125 1.125V21h4.125c.621 0 1.125-.504 1.125-1.125V9.75M8.25 21h8.25"
              />
            </svg>
          </Link>
        </div>
        <div className="std-navigation flex flex-1 justify-around">
          <Link href="about">home</Link>
          <Link href="public/blog">blog</Link>
        </div>
        <div className="account-manager flex-3 flex-inital flex w-32 justify-around">
          <SignInButton />
        </div>
        <ToggleTheme />
      </nav>
      <main className="min-h-screen bg-bg100 dark:bg-darkBg100">
        {children}
      </main>
      <footer></footer>
    </div>
  );
}
