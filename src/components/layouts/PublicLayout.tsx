import { SignInButton, SignOutButton, useUser } from "@clerk/nextjs";
import Head from "next/head";
import Link from "next/link";
import { useState } from "react";
import ToggleTheme from "../shared/ToggleTheme";

export default function PublicLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  const [theme, setTheme] = useState("light");

  const user = useUser();

  const { isLoaded: userLoaded } = useUser();

  return (
    <div className={`bg-bg100 dark:bg-darkBg100`}>
      <Head>
        <title>Realty-Hub</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <nav className="flex">
        <NavButtons userLoaded={userLoaded} />
        <div className="account-manager flex-3 flex-inital mx-4 flex w-32 justify-around">
          {userLoaded && user.isSignedIn ? <SignOutButton /> : <SignInButton />}
        </div>
        <ToggleTheme theme={theme} setTheme={setTheme} />
      </nav>
      <main className="bg-bg100 dark:bg-darkBg100">{children}</main>
      <footer></footer>
    </div>
  );
}

interface ButtonProps {
  userLoaded: boolean;
}

function NavButtons(props: ButtonProps) {
  const { userLoaded } = props;

  const user = useUser();

  return (
    <>
      <div className="logo-container ml-4 flex flex-none">
        <Link href="/">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            viewBox="0 0 24 24"
            fill="currentColor"
            className="h-6 w-6 text-primary200"
          >
            <path d="M11.47 3.84a.75.75 0 011.06 0l8.69 8.69a.75.75 0 101.06-1.06l-8.689-8.69a2.25 2.25 0 00-3.182 0l-8.69 8.69a.75.75 0 001.061 1.06l8.69-8.69z" />
            <path d="M12 5.432l8.159 8.159c.03.03.06.058.091.086v6.198c0 1.035-.84 1.875-1.875 1.875H15a.75.75 0 01-.75-.75v-4.5a.75.75 0 00-.75-.75h-3a.75.75 0 00-.75.75V21a.75.75 0 01-.75.75H5.625a1.875 1.875 0 01-1.875-1.875v-6.198a2.29 2.29 0 00.091-.086L12 5.43z" />
          </svg>
        </Link>
      </div>
      <div className="std-navigation flex flex-1 justify-around">
        <Link href="/" className="hover:underline">
          home
        </Link>
        <Link href="/public/articles" className="hover:underline">
          articles
        </Link>
        {userLoaded && user.isSignedIn && <Link href="user/">Dashboard</Link>}
      </div>
    </>
  );
}
